#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef FASTBOARD_SWIFT_H
#define FASTBOARD_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import Whiteboard;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Fastboard",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC9Fastboard17AppearanceManager")
@interface AppearanceManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AppearanceManager * _Nonnull shared;)
+ (AppearanceManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)commitUpdate;
@end

@class FastPanel;
@protocol FastOperationItem;

SWIFT_PROTOCOL("_TtP9Fastboard17FastPanelDelegate_")
@protocol FastPanelDelegate
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
@end

@class NSNumber;
@class DefaultOperationIdentifier;

SWIFT_PROTOCOL("_TtP9Fastboard16FastPanelControl_")
@protocol FastPanelControl
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
/// All the subPanels will be dismissed temporally
/// It will show again after a touch on SubOpsItem
- (void)dismissAllSubPanels;
@end

@class WhiteRoom;
@class FastboardView;
enum OperationBarDirection : NSInteger;
@class UIColor;
@class WhiteSceneState;
enum FastRoomPhase : NSInteger;

SWIFT_PROTOCOL("_TtP9Fastboard16FastboardOverlay_")
@protocol FastboardOverlay <FastPanelControl>
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)invalidAllLayout;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
@optional
- (void)respondToPencilTap:(UIPencilPreferredAction)tap SWIFT_AVAILABILITY(ios,introduced=12.1);
@end


SWIFT_CLASS("_TtC9Fastboard23CompactFastboardOverlay")
@interface CompactFastboardOverlay : NSObject <FastPanelDelegate, FastboardOverlay>
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
- (void)dismissAllSubPanels;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<WhiteApplianceNameKey> * _Nonnull defaultCompactAppliance;)
+ (NSArray<WhiteApplianceNameKey> * _Nonnull)defaultCompactAppliance SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultCompactAppliance:(NSArray<WhiteApplianceNameKey> * _Nonnull)value;
- (void)invalidAllLayout;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface CompactFastboardOverlay (SWIFT_EXTENSION(Fastboard))
@property (nonatomic, readonly, strong) FastPanel * _Nonnull colorAndStrokePanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull operationPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull deleteSelectionPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull undoRedoPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull scenePanel;
@end

@class NSCoder;

/// All the views inserted in this container should not update the button isHidden property
/// call ‘updateButtonHide’
SWIFT_CLASS("_TtC9Fastboard10ControlBar")
@interface ControlBar : UIView
@property (nonatomic) CGFloat itemWidth;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic) CGFloat commonRadius;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic) enum UILayoutConstraintAxis direction;
@property (nonatomic) CACornerMask borderMask;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIBlurEffect;

SWIFT_CLASS("_TtC9Fastboard16ControlBarAssets")
@interface ControlBarAssets : NSObject
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor borderColor:(UIColor * _Nonnull)borderColor effectStyle:(UIBlurEffect * _Nullable)effectStyle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
enum DefaultOperationType : NSInteger;

SWIFT_CLASS("_TtC9Fastboard26DefaultOperationIdentifier")
@interface DefaultOperationIdentifier : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
+ (DefaultOperationIdentifier * _Nonnull)appliceWithKey:(WhiteApplianceNameKey _Nonnull)key shape:(WhiteApplianceShapeTypeKey _Nullable)shape SWIFT_WARN_UNUSED_RESULT;
+ (DefaultOperationIdentifier * _Nonnull)color:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (DefaultOperationIdentifier * _Nullable)operationType:(enum DefaultOperationType)type SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9Fastboard20DefaultOperationItem")
@interface DefaultOperationItem : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<UIColor *> * _Nonnull defaultColors;)
+ (NSArray<UIColor *> * _Nonnull)defaultColors SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultColors:(NSArray<UIColor *> * _Nonnull)value;
+ (id <FastOperationItem> _Nonnull)clean SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)deleteSelectionItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)strokeWidthItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)redoItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)undoItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)previousPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)nextPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)newPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)selectableApplianceItem:(WhiteApplianceNameKey _Nonnull)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)pageIndicatorItem SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DefaultOperationType, open) {
  DefaultOperationTypeAppliance = 0,
  DefaultOperationTypeShape = 1,
  DefaultOperationTypeColor = 2,
  DefaultOperationTypeDeleteSelection = 3,
  DefaultOperationTypeStrokeWidth = 4,
  DefaultOperationTypeClean = 5,
  DefaultOperationTypeRedo = 6,
  DefaultOperationTypeUndo = 7,
  DefaultOperationTypeNewPage = 8,
  DefaultOperationTypePreviousPage = 9,
  DefaultOperationTypeNextPage = 10,
  DefaultOperationTypePageIndicator = 11,
};

@class ThemeAsset;

SWIFT_CLASS("_TtC9Fastboard12DefaultTheme")
@interface DefaultTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultLightTheme;)
+ (ThemeAsset * _Nonnull)defaultLightTheme SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultDarkTheme;)
+ (ThemeAsset * _Nonnull)defaultDarkTheme SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultAutoTheme SWIFT_AVAILABILITY(ios,introduced=13);)
+ (ThemeAsset * _Nonnull)defaultAutoTheme SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WhiteSdkConfiguration;
@class WhiteRoomConfig;
enum FastRegion : NSInteger;

SWIFT_CLASS("_TtC9Fastboard17FastConfiguration")
@interface FastConfiguration : NSObject
/// Update whiteSDK configuration here
@property (nonatomic, readonly, strong) WhiteSdkConfiguration * _Nonnull whiteSdkConfiguration;
/// Update whiteRoom configuration here
@property (nonatomic, readonly, strong) WhiteRoomConfig * _Nonnull whiteRoomConfig;
/// Assign a custom overlay to create your own overlay style
@property (nonatomic, strong) id <FastboardOverlay> _Nullable customOverlay;
/// Create FastConfiguration
/// \param appIdentifier appIdentifier 白板项目的唯一标识。详见<a href="https://docs.agora.io/cn/whiteboard/enable_whiteboard?platform=iOS#获取-app-identifier">获取白板项目的 App Identifier</a>。
///
/// \param roomUUID uuid 房间 UUID，即房间唯一标识符。
///
/// \param roomToken roomToken 用于鉴权的 Room Token。生成该 Room Token 的房间 UUID 必须和上面传入的房间 UUID 一致。
///
/// \param region 数据中心
///
/// \param userUID 用户标识，可以为任意 string。
///
- (nonnull instancetype)initWithAppIdentifier:(NSString * _Nonnull)appIdentifier roomUUID:(NSString * _Nonnull)roomUUID roomToken:(NSString * _Nonnull)roomToken region:(enum FastRegion)region userUID:(NSString * _Nonnull)userUID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("use the designed init instead");
@end


SWIFT_CLASS("_TtC9Fastboard9FastError")
@interface FastError : NSError
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP9Fastboard17FastOperationItem_")
@protocol FastOperationItem
@property (nonatomic, readonly, copy) void (^ _Nonnull action)(WhiteRoom * _Nonnull, id _Nullable);
@property (nonatomic, strong) WhiteRoom * _Nullable room;
@property (nonatomic, readonly, strong) UIView * _Nullable associatedView;
@property (nonatomic, readonly, copy) NSString * _Nullable identifier;
- (UIView * _Nonnull)buildViewWithInterrupter:(void (^ _Nullable)(id <FastOperationItem> _Nonnull))interrupter SWIFT_WARN_UNUSED_RESULT;
- (void)setEnable:(BOOL)enable;
@end


SWIFT_CLASS("_TtC9Fastboard9FastPanel")
@interface FastPanel : NSObject
- (nonnull instancetype)initWithItems:(NSArray<id <FastOperationItem>> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSArray<id <FastOperationItem>> * _Nonnull flatItems;
@property (nonatomic, copy) NSArray<id <FastOperationItem>> * _Nonnull items;
@property (nonatomic, weak) id <FastPanelDelegate> _Nullable delegate;
@property (nonatomic, weak) ControlBar * _Nullable view;
- (void)setItemHideFromKey:(DefaultOperationIdentifier * _Nonnull)key hide:(BOOL)hide;
- (void)deselectAll;
- (void)updateStrokeWidth:(float)width;
- (void)updateSelectedColor:(UIColor * _Nonnull)color;
- (void)updateWithApplianceOutside:(WhiteApplianceNameKey _Nonnull)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (ControlBar * _Nonnull)setupWithRoom:(WhiteRoom * _Nonnull)room direction:(enum UILayoutConstraintAxis)direction mask:(CACornerMask)mask SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, FastRoomPhase, open) {
  FastRoomPhaseConnecting = 0,
  FastRoomPhaseConnected = 1,
  FastRoomPhaseReconnecting = 2,
  FastRoomPhaseDisconnecting = 3,
  FastRoomPhaseDisconnected = 4,
  FastRoomPhaseUnknown = 5,
};

@class WhiteSDK;
@protocol FastboardDelegate;
@protocol WhiteCommonCallbackDelegate;
@protocol WhiteRoomCallbackDelegate;

SWIFT_CLASS("_TtC9Fastboard9Fastboard")
@interface Fastboard : NSObject
/// The view you should add to your viewController
@property (nonatomic, readonly, strong) FastboardView * _Nonnull view;
/// The whiteSDK object, do not update it’s delegate directly
/// using ‘commonDelegate’ instead
@property (nonatomic, strong) WhiteSDK * _Null_unspecified whiteSDK;
/// The whiteRoom object, do not update it’s delegate directly
/// using ‘roomDelegate’ instead
@property (nonatomic, strong) WhiteRoom * _Nullable room;
/// The delegate of fastboard
/// Wrapped the whiteRoom and whiteSDK event
@property (nonatomic, weak) id <FastboardDelegate> _Nullable delegate;
/// Proxy for whiteSDK delegate
@property (nonatomic, strong) id <WhiteCommonCallbackDelegate> _Nullable commonDelegate;
/// Proxy for whiteRoom delegate
@property (nonatomic, strong) id <WhiteRoomCallbackDelegate> _Nullable roomDelegate;
/// Call the method to join the whiteRoom
- (void)joinRoom;
- (void)disconnectRoom;
- (void)updateWritable:(BOOL)writable completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (nonnull instancetype)initWithConfiguration:(FastConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIPencilInteraction;

@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <UIPencilInteractionDelegate>
- (void)pencilInteractionDidTap:(UIPencilInteraction * _Nonnull)interaction SWIFT_AVAILABILITY(ios,introduced=12.1);
@end


@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <WhiteCommonCallbackDelegate>
- (void)throwError:(NSError * _Nonnull)error;
- (void)sdkSetupFail:(NSError * _Nonnull)error;
@end


@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <FastPanelControl>
- (void)dismissAllSubPanels;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
@end


@class WhiteRoomState;

@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <WhiteRoomCallbackDelegate>
- (void)firePhaseChanged:(WhiteRoomPhase)phase;
- (void)fireRoomStateChanged:(WhiteRoomState * _Null_unspecified)modifyState;
- (void)fireDisconnectWithError:(NSString * _Null_unspecified)error;
- (void)fireKickedWithReason:(NSString * _Null_unspecified)reason;
- (void)fireCanUndoStepsUpdate:(NSInteger)canUndoSteps;
- (void)fireCanRedoStepsUpdate:(NSInteger)canRedoSteps;
@end


SWIFT_PROTOCOL("_TtP9Fastboard17FastboardDelegate_")
@protocol FastboardDelegate
- (void)fastboard:(Fastboard * _Nonnull)fastboard error:(FastError * _Nonnull)error;
- (void)fastboardUserKickedOut:(Fastboard * _Nonnull)fastboard reason:(NSString * _Nonnull)reason;
- (void)fastboardPhaseDidUpdate:(Fastboard * _Nonnull)fastboard phase:(enum FastRoomPhase)phase;
@optional
- (void)fastboardDidSetupOverlay:(Fastboard * _Nonnull)fastboard overlay:(id <FastboardOverlay> _Nullable)overlay;
@end


SWIFT_CLASS("_TtC9Fastboard16FastboardManager")
@interface FastboardManager : NSObject
/// Change this to update the whiteRoom ratio and whiteboardView ratio
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat globalFastboardRatio;)
+ (CGFloat)globalFastboardRatio SWIFT_WARN_UNUSED_RESULT;
+ (void)setGlobalFastboardRatio:(CGFloat)value;
/// Change this value to indicate if pencil will follow the system preference
/// And this variable will only effect on iPad (Which has no compact sizeClass)
/// Default is true
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL followSystemPencilBehavior;)
+ (BOOL)followSystemPencilBehavior SWIFT_WARN_UNUSED_RESULT;
+ (void)setFollowSystemPencilBehavior:(BOOL)value;
/// Indicate whether an UIActivityIndicatorView should be add to Fastboard in bad network environment
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showActivityIndicatorWhenReconnecting;)
+ (BOOL)showActivityIndicatorWhenReconnecting SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowActivityIndicatorWhenReconnecting:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class WhiteBoardView;

SWIFT_CLASS("_TtC9Fastboard13FastboardView")
@interface FastboardView : UIView <FastPanelControl>
@property (nonatomic) enum OperationBarDirection operationBarDirection;
@property (nonatomic, strong) id <FastboardOverlay> _Nullable overlay;
- (nonnull instancetype)initWithOverlay:(id <FastboardOverlay> _Nullable)overlay OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) WhiteBoardView * _Null_unspecified whiteboardView;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)dismissAllSubPanels;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, OperationBarDirection, open) {
  OperationBarDirectionLeft = 0,
  OperationBarDirectionRight = 1,
};


SWIFT_CLASS("_TtC9Fastboard15PanelItemAssets")
@interface PanelItemAssets : NSObject
- (nonnull instancetype)initWithNormalIconColor:(UIColor * _Nonnull)normalIconColor selectedIconColor:(UIColor * _Nonnull)selectedIconColor highlightBgColor:(UIColor * _Nonnull)highlightBgColor subOpsIndicatorColor:(UIColor * _Nonnull)subOpsIndicatorColor pageTextLabelColor:(UIColor * _Nonnull)pageTextLabelColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull normalIconColor;
@property (nonatomic, strong) UIColor * _Nonnull selectedIconColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightBgColor;
@property (nonatomic, strong) UIColor * _Nonnull subOpsIndicatorColor;
@property (nonatomic, strong) UIColor * _Nonnull pageTextLabelColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, FastRegion, "Region", open) {
/// China
  FastRegionCN = 0,
/// USA
  FastRegionUS = 1,
/// Singapore
  FastRegionSG = 2,
/// India
  FastRegionIN = 3,
/// England
  FastRegionGB = 4,
};


SWIFT_CLASS("_TtC9Fastboard23RegularFastboardOverlay")
@interface RegularFastboardOverlay : NSObject <FastPanelDelegate, FastboardOverlay>
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
- (void)respondToPencilTap:(UIPencilPreferredAction)tap SWIFT_AVAILABILITY(ios,introduced=12.1);
- (void)dismissAllSubPanels;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) FastPanel * _Nonnull (^ _Nullable customOptionPanel)(void);)
+ (FastPanel * _Nonnull (^ _Nullable)(void))customOptionPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCustomOptionPanel:(FastPanel * _Nonnull (^ _Nullable)(void))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<id <FastOperationItem>> * _Nonnull shapeItems;)
+ (NSArray<id <FastOperationItem>> * _Nonnull)shapeItems SWIFT_WARN_UNUSED_RESULT;
+ (void)setShapeItems:(NSArray<id <FastOperationItem>> * _Nonnull)value;
- (void)invalidAllLayout;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RegularFastboardOverlay (SWIFT_EXTENSION(Fastboard))
@property (nonatomic, readonly, strong) FastPanel * _Nonnull operationPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull deleteSelectionPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull undoRedoPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull scenePanel;
@end


SWIFT_CLASS("_TtC9Fastboard10SubOpsItem")
@interface SubOpsItem : NSObject <FastOperationItem>
- (nonnull instancetype)initWithSubOps:(NSArray<id <FastOperationItem>> * _Nonnull)subOps OBJC_DESIGNATED_INITIALIZER;
- (void)setEnable:(BOOL)enable;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) void (^ _Nonnull action)(WhiteRoom * _Nonnull, id _Nullable);
@property (nonatomic, weak) UIView * _Nullable associatedView;
@property (nonatomic, weak) WhiteRoom * _Nullable room;
- (UIView * _Nonnull)buildViewWithInterrupter:(void (^ _Nullable)(id <FastOperationItem> _Nonnull))interrupter SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WhiteboardAssets;

SWIFT_CLASS("_TtC9Fastboard10ThemeAsset")
@interface ThemeAsset : NSObject
- (nonnull instancetype)initWithWhiteboardAssets:(WhiteboardAssets * _Nonnull)whiteboardAssets controlBarAssets:(ControlBarAssets * _Nonnull)controlBarAssets panelItemAssets:(PanelItemAssets * _Nonnull)panelItemAssets OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) WhiteboardAssets * _Nonnull whiteboardAssets;
@property (nonatomic, strong) ControlBarAssets * _Nonnull controlBarAssets;
@property (nonatomic, strong) PanelItemAssets * _Nonnull panelItemAssets;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSBundle;

SWIFT_CLASS_NAMED("ThemeManager")
@interface FastboardThemeManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FastboardThemeManager * _Nonnull shared;)
+ (FastboardThemeManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// You should call it before fastboard create
- (void)updateIconsUsing:(NSBundle * _Nonnull)bundle;
- (void)apply:(ThemeAsset * _Nonnull)theme;
@end













SWIFT_CLASS("_TtC9Fastboard16WhiteboardAssets")
@interface WhiteboardAssets : NSObject
- (nonnull instancetype)initWithWhiteboardBackgroundColor:(UIColor * _Nonnull)whiteboardBackgroundColor containerColor:(UIColor * _Nonnull)containerColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull whiteboardBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull containerColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef FASTBOARD_SWIFT_H
#define FASTBOARD_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
@import Whiteboard;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Fastboard",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC9Fastboard17AppearanceManager")
@interface AppearanceManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AppearanceManager * _Nonnull shared;)
+ (AppearanceManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)commitUpdate;
@end

@class FastPanel;
@protocol FastOperationItem;

SWIFT_PROTOCOL("_TtP9Fastboard17FastPanelDelegate_")
@protocol FastPanelDelegate
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
@end

@class NSNumber;
@class DefaultOperationIdentifier;

SWIFT_PROTOCOL("_TtP9Fastboard16FastPanelControl_")
@protocol FastPanelControl
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
/// All the subPanels will be dismissed temporally
/// It will show again after a touch on SubOpsItem
- (void)dismissAllSubPanels;
@end

@class WhiteRoom;
@class FastboardView;
enum OperationBarDirection : NSInteger;
@class UIColor;
@class WhiteSceneState;
enum FastRoomPhase : NSInteger;

SWIFT_PROTOCOL("_TtP9Fastboard16FastboardOverlay_")
@protocol FastboardOverlay <FastPanelControl>
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)invalidAllLayout;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
@optional
- (void)respondToPencilTap:(UIPencilPreferredAction)tap SWIFT_AVAILABILITY(ios,introduced=12.1);
@end


SWIFT_CLASS("_TtC9Fastboard23CompactFastboardOverlay")
@interface CompactFastboardOverlay : NSObject <FastPanelDelegate, FastboardOverlay>
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
- (void)dismissAllSubPanels;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<WhiteApplianceNameKey> * _Nonnull defaultCompactAppliance;)
+ (NSArray<WhiteApplianceNameKey> * _Nonnull)defaultCompactAppliance SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultCompactAppliance:(NSArray<WhiteApplianceNameKey> * _Nonnull)value;
- (void)invalidAllLayout;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface CompactFastboardOverlay (SWIFT_EXTENSION(Fastboard))
@property (nonatomic, readonly, strong) FastPanel * _Nonnull colorAndStrokePanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull operationPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull deleteSelectionPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull undoRedoPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull scenePanel;
@end

@class NSCoder;

/// All the views inserted in this container should not update the button isHidden property
/// call ‘updateButtonHide’
SWIFT_CLASS("_TtC9Fastboard10ControlBar")
@interface ControlBar : UIView
@property (nonatomic) CGFloat itemWidth;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic) CGFloat commonRadius;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@property (nonatomic) enum UILayoutConstraintAxis direction;
@property (nonatomic) CACornerMask borderMask;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIBlurEffect;

SWIFT_CLASS("_TtC9Fastboard16ControlBarAssets")
@interface ControlBarAssets : NSObject
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor borderColor:(UIColor * _Nonnull)borderColor effectStyle:(UIBlurEffect * _Nullable)effectStyle OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
enum DefaultOperationType : NSInteger;

SWIFT_CLASS("_TtC9Fastboard26DefaultOperationIdentifier")
@interface DefaultOperationIdentifier : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
+ (DefaultOperationIdentifier * _Nonnull)appliceWithKey:(WhiteApplianceNameKey _Nonnull)key shape:(WhiteApplianceShapeTypeKey _Nullable)shape SWIFT_WARN_UNUSED_RESULT;
+ (DefaultOperationIdentifier * _Nonnull)color:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (DefaultOperationIdentifier * _Nullable)operationType:(enum DefaultOperationType)type SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC9Fastboard20DefaultOperationItem")
@interface DefaultOperationItem : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<UIColor *> * _Nonnull defaultColors;)
+ (NSArray<UIColor *> * _Nonnull)defaultColors SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultColors:(NSArray<UIColor *> * _Nonnull)value;
+ (id <FastOperationItem> _Nonnull)clean SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)deleteSelectionItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)strokeWidthItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)redoItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)undoItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)previousPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)nextPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)newPageItem SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)selectableApplianceItem:(WhiteApplianceNameKey _Nonnull)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape SWIFT_WARN_UNUSED_RESULT;
+ (id <FastOperationItem> _Nonnull)pageIndicatorItem SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DefaultOperationType, open) {
  DefaultOperationTypeAppliance = 0,
  DefaultOperationTypeShape = 1,
  DefaultOperationTypeColor = 2,
  DefaultOperationTypeDeleteSelection = 3,
  DefaultOperationTypeStrokeWidth = 4,
  DefaultOperationTypeClean = 5,
  DefaultOperationTypeRedo = 6,
  DefaultOperationTypeUndo = 7,
  DefaultOperationTypeNewPage = 8,
  DefaultOperationTypePreviousPage = 9,
  DefaultOperationTypeNextPage = 10,
  DefaultOperationTypePageIndicator = 11,
};

@class ThemeAsset;

SWIFT_CLASS("_TtC9Fastboard12DefaultTheme")
@interface DefaultTheme : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultLightTheme;)
+ (ThemeAsset * _Nonnull)defaultLightTheme SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultDarkTheme;)
+ (ThemeAsset * _Nonnull)defaultDarkTheme SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ThemeAsset * _Nonnull defaultAutoTheme SWIFT_AVAILABILITY(ios,introduced=13);)
+ (ThemeAsset * _Nonnull)defaultAutoTheme SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class WhiteSdkConfiguration;
@class WhiteRoomConfig;
enum FastRegion : NSInteger;

SWIFT_CLASS("_TtC9Fastboard17FastConfiguration")
@interface FastConfiguration : NSObject
/// Update whiteSDK configuration here
@property (nonatomic, readonly, strong) WhiteSdkConfiguration * _Nonnull whiteSdkConfiguration;
/// Update whiteRoom configuration here
@property (nonatomic, readonly, strong) WhiteRoomConfig * _Nonnull whiteRoomConfig;
/// Assign a custom overlay to create your own overlay style
@property (nonatomic, strong) id <FastboardOverlay> _Nullable customOverlay;
/// Create FastConfiguration
/// \param appIdentifier appIdentifier 白板项目的唯一标识。详见<a href="https://docs.agora.io/cn/whiteboard/enable_whiteboard?platform=iOS#获取-app-identifier">获取白板项目的 App Identifier</a>。
///
/// \param roomUUID uuid 房间 UUID，即房间唯一标识符。
///
/// \param roomToken roomToken 用于鉴权的 Room Token。生成该 Room Token 的房间 UUID 必须和上面传入的房间 UUID 一致。
///
/// \param region 数据中心
///
/// \param userUID 用户标识，可以为任意 string。
///
- (nonnull instancetype)initWithAppIdentifier:(NSString * _Nonnull)appIdentifier roomUUID:(NSString * _Nonnull)roomUUID roomToken:(NSString * _Nonnull)roomToken region:(enum FastRegion)region userUID:(NSString * _Nonnull)userUID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_DEPRECATED_MSG("use the designed init instead");
@end


SWIFT_CLASS("_TtC9Fastboard9FastError")
@interface FastError : NSError
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP9Fastboard17FastOperationItem_")
@protocol FastOperationItem
@property (nonatomic, readonly, copy) void (^ _Nonnull action)(WhiteRoom * _Nonnull, id _Nullable);
@property (nonatomic, strong) WhiteRoom * _Nullable room;
@property (nonatomic, readonly, strong) UIView * _Nullable associatedView;
@property (nonatomic, readonly, copy) NSString * _Nullable identifier;
- (UIView * _Nonnull)buildViewWithInterrupter:(void (^ _Nullable)(id <FastOperationItem> _Nonnull))interrupter SWIFT_WARN_UNUSED_RESULT;
- (void)setEnable:(BOOL)enable;
@end


SWIFT_CLASS("_TtC9Fastboard9FastPanel")
@interface FastPanel : NSObject
- (nonnull instancetype)initWithItems:(NSArray<id <FastOperationItem>> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSArray<id <FastOperationItem>> * _Nonnull flatItems;
@property (nonatomic, copy) NSArray<id <FastOperationItem>> * _Nonnull items;
@property (nonatomic, weak) id <FastPanelDelegate> _Nullable delegate;
@property (nonatomic, weak) ControlBar * _Nullable view;
- (void)setItemHideFromKey:(DefaultOperationIdentifier * _Nonnull)key hide:(BOOL)hide;
- (void)deselectAll;
- (void)updateStrokeWidth:(float)width;
- (void)updateSelectedColor:(UIColor * _Nonnull)color;
- (void)updateWithApplianceOutside:(WhiteApplianceNameKey _Nonnull)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (ControlBar * _Nonnull)setupWithRoom:(WhiteRoom * _Nonnull)room direction:(enum UILayoutConstraintAxis)direction mask:(CACornerMask)mask SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, FastRoomPhase, open) {
  FastRoomPhaseConnecting = 0,
  FastRoomPhaseConnected = 1,
  FastRoomPhaseReconnecting = 2,
  FastRoomPhaseDisconnecting = 3,
  FastRoomPhaseDisconnected = 4,
  FastRoomPhaseUnknown = 5,
};

@class WhiteSDK;
@protocol FastboardDelegate;
@protocol WhiteCommonCallbackDelegate;
@protocol WhiteRoomCallbackDelegate;

SWIFT_CLASS("_TtC9Fastboard9Fastboard")
@interface Fastboard : NSObject
/// The view you should add to your viewController
@property (nonatomic, readonly, strong) FastboardView * _Nonnull view;
/// The whiteSDK object, do not update it’s delegate directly
/// using ‘commonDelegate’ instead
@property (nonatomic, strong) WhiteSDK * _Null_unspecified whiteSDK;
/// The whiteRoom object, do not update it’s delegate directly
/// using ‘roomDelegate’ instead
@property (nonatomic, strong) WhiteRoom * _Nullable room;
/// The delegate of fastboard
/// Wrapped the whiteRoom and whiteSDK event
@property (nonatomic, weak) id <FastboardDelegate> _Nullable delegate;
/// Proxy for whiteSDK delegate
@property (nonatomic, strong) id <WhiteCommonCallbackDelegate> _Nullable commonDelegate;
/// Proxy for whiteRoom delegate
@property (nonatomic, strong) id <WhiteRoomCallbackDelegate> _Nullable roomDelegate;
/// Call the method to join the whiteRoom
- (void)joinRoom;
- (void)disconnectRoom;
- (void)updateWritable:(BOOL)writable completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (nonnull instancetype)initWithConfiguration:(FastConfiguration * _Nonnull)configuration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIPencilInteraction;

@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <UIPencilInteractionDelegate>
- (void)pencilInteractionDidTap:(UIPencilInteraction * _Nonnull)interaction SWIFT_AVAILABILITY(ios,introduced=12.1);
@end


@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <WhiteCommonCallbackDelegate>
- (void)throwError:(NSError * _Nonnull)error;
- (void)sdkSetupFail:(NSError * _Nonnull)error;
@end


@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <FastPanelControl>
- (void)dismissAllSubPanels;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
@end


@class WhiteRoomState;

@interface Fastboard (SWIFT_EXTENSION(Fastboard)) <WhiteRoomCallbackDelegate>
- (void)firePhaseChanged:(WhiteRoomPhase)phase;
- (void)fireRoomStateChanged:(WhiteRoomState * _Null_unspecified)modifyState;
- (void)fireDisconnectWithError:(NSString * _Null_unspecified)error;
- (void)fireKickedWithReason:(NSString * _Null_unspecified)reason;
- (void)fireCanUndoStepsUpdate:(NSInteger)canUndoSteps;
- (void)fireCanRedoStepsUpdate:(NSInteger)canRedoSteps;
@end


SWIFT_PROTOCOL("_TtP9Fastboard17FastboardDelegate_")
@protocol FastboardDelegate
- (void)fastboard:(Fastboard * _Nonnull)fastboard error:(FastError * _Nonnull)error;
- (void)fastboardUserKickedOut:(Fastboard * _Nonnull)fastboard reason:(NSString * _Nonnull)reason;
- (void)fastboardPhaseDidUpdate:(Fastboard * _Nonnull)fastboard phase:(enum FastRoomPhase)phase;
@optional
- (void)fastboardDidSetupOverlay:(Fastboard * _Nonnull)fastboard overlay:(id <FastboardOverlay> _Nullable)overlay;
@end


SWIFT_CLASS("_TtC9Fastboard16FastboardManager")
@interface FastboardManager : NSObject
/// Change this to update the whiteRoom ratio and whiteboardView ratio
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat globalFastboardRatio;)
+ (CGFloat)globalFastboardRatio SWIFT_WARN_UNUSED_RESULT;
+ (void)setGlobalFastboardRatio:(CGFloat)value;
/// Change this value to indicate if pencil will follow the system preference
/// And this variable will only effect on iPad (Which has no compact sizeClass)
/// Default is true
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL followSystemPencilBehavior;)
+ (BOOL)followSystemPencilBehavior SWIFT_WARN_UNUSED_RESULT;
+ (void)setFollowSystemPencilBehavior:(BOOL)value;
/// Indicate whether an UIActivityIndicatorView should be add to Fastboard in bad network environment
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL showActivityIndicatorWhenReconnecting;)
+ (BOOL)showActivityIndicatorWhenReconnecting SWIFT_WARN_UNUSED_RESULT;
+ (void)setShowActivityIndicatorWhenReconnecting:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class WhiteBoardView;

SWIFT_CLASS("_TtC9Fastboard13FastboardView")
@interface FastboardView : UIView <FastPanelControl>
@property (nonatomic) enum OperationBarDirection operationBarDirection;
@property (nonatomic, strong) id <FastboardOverlay> _Nullable overlay;
- (nonnull instancetype)initWithOverlay:(id <FastboardOverlay> _Nullable)overlay OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) WhiteBoardView * _Null_unspecified whiteboardView;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)dismissAllSubPanels;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


typedef SWIFT_ENUM(NSInteger, OperationBarDirection, open) {
  OperationBarDirectionLeft = 0,
  OperationBarDirectionRight = 1,
};


SWIFT_CLASS("_TtC9Fastboard15PanelItemAssets")
@interface PanelItemAssets : NSObject
- (nonnull instancetype)initWithNormalIconColor:(UIColor * _Nonnull)normalIconColor selectedIconColor:(UIColor * _Nonnull)selectedIconColor highlightBgColor:(UIColor * _Nonnull)highlightBgColor subOpsIndicatorColor:(UIColor * _Nonnull)subOpsIndicatorColor pageTextLabelColor:(UIColor * _Nonnull)pageTextLabelColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull normalIconColor;
@property (nonatomic, strong) UIColor * _Nonnull selectedIconColor;
@property (nonatomic, strong) UIColor * _Nonnull highlightBgColor;
@property (nonatomic, strong) UIColor * _Nonnull subOpsIndicatorColor;
@property (nonatomic, strong) UIColor * _Nonnull pageTextLabelColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, FastRegion, "Region", open) {
/// China
  FastRegionCN = 0,
/// USA
  FastRegionUS = 1,
/// Singapore
  FastRegionSG = 2,
/// India
  FastRegionIN = 3,
/// England
  FastRegionGB = 4,
};


SWIFT_CLASS("_TtC9Fastboard23RegularFastboardOverlay")
@interface RegularFastboardOverlay : NSObject <FastPanelDelegate, FastboardOverlay>
- (void)updateRoomPhaseUpdate:(enum FastRoomPhase)phase;
- (void)respondToPencilTap:(UIPencilPreferredAction)tap SWIFT_AVAILABILITY(ios,introduced=12.1);
- (void)dismissAllSubPanels;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) FastPanel * _Nonnull (^ _Nullable customOptionPanel)(void);)
+ (FastPanel * _Nonnull (^ _Nullable)(void))customOptionPanel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCustomOptionPanel:(FastPanel * _Nonnull (^ _Nullable)(void))value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<id <FastOperationItem>> * _Nonnull shapeItems;)
+ (NSArray<id <FastOperationItem>> * _Nonnull)shapeItems SWIFT_WARN_UNUSED_RESULT;
+ (void)setShapeItems:(NSArray<id <FastOperationItem>> * _Nonnull)value;
- (void)invalidAllLayout;
- (void)updateBoxState:(WhiteWindowBoxState _Nullable)state;
- (void)setupWithRoom:(WhiteRoom * _Nonnull)room fastboardView:(FastboardView * _Nonnull)fastboardView direction:(enum OperationBarDirection)direction;
- (void)updateControlBarLayoutWithDirection:(enum OperationBarDirection)direction;
- (void)updateUIWithInitAppliance:(WhiteApplianceNameKey _Nullable)appliance shape:(WhiteApplianceShapeTypeKey _Nullable)shape;
- (void)updateStrokeColor:(UIColor * _Nonnull)color;
- (void)updateStrokeWidth:(float)width;
- (void)updateSceneState:(WhiteSceneState * _Nonnull)scene;
- (void)updateUndoEnable:(BOOL)enable;
- (void)updateRedoEnable:(BOOL)enable;
- (void)setAllPanelWithHide:(BOOL)hide;
- (void)setPanelItemHideWithItem:(DefaultOperationIdentifier * _Nonnull)item hide:(BOOL)hide;
- (void)itemWillBeExecutionWithFastPanel:(FastPanel * _Nonnull)fastPanel item:(id <FastOperationItem> _Nonnull)item;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RegularFastboardOverlay (SWIFT_EXTENSION(Fastboard))
@property (nonatomic, readonly, strong) FastPanel * _Nonnull operationPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull deleteSelectionPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull undoRedoPanel;
@property (nonatomic, readonly, strong) FastPanel * _Nonnull scenePanel;
@end


SWIFT_CLASS("_TtC9Fastboard10SubOpsItem")
@interface SubOpsItem : NSObject <FastOperationItem>
- (nonnull instancetype)initWithSubOps:(NSArray<id <FastOperationItem>> * _Nonnull)subOps OBJC_DESIGNATED_INITIALIZER;
- (void)setEnable:(BOOL)enable;
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) void (^ _Nonnull action)(WhiteRoom * _Nonnull, id _Nullable);
@property (nonatomic, weak) UIView * _Nullable associatedView;
@property (nonatomic, weak) WhiteRoom * _Nullable room;
- (UIView * _Nonnull)buildViewWithInterrupter:(void (^ _Nullable)(id <FastOperationItem> _Nonnull))interrupter SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WhiteboardAssets;

SWIFT_CLASS("_TtC9Fastboard10ThemeAsset")
@interface ThemeAsset : NSObject
- (nonnull instancetype)initWithWhiteboardAssets:(WhiteboardAssets * _Nonnull)whiteboardAssets controlBarAssets:(ControlBarAssets * _Nonnull)controlBarAssets panelItemAssets:(PanelItemAssets * _Nonnull)panelItemAssets OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) WhiteboardAssets * _Nonnull whiteboardAssets;
@property (nonatomic, strong) ControlBarAssets * _Nonnull controlBarAssets;
@property (nonatomic, strong) PanelItemAssets * _Nonnull panelItemAssets;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSBundle;

SWIFT_CLASS_NAMED("ThemeManager")
@interface FastboardThemeManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FastboardThemeManager * _Nonnull shared;)
+ (FastboardThemeManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// You should call it before fastboard create
- (void)updateIconsUsing:(NSBundle * _Nonnull)bundle;
- (void)apply:(ThemeAsset * _Nonnull)theme;
@end













SWIFT_CLASS("_TtC9Fastboard16WhiteboardAssets")
@interface WhiteboardAssets : NSObject
- (nonnull instancetype)initWithWhiteboardBackgroundColor:(UIColor * _Nonnull)whiteboardBackgroundColor containerColor:(UIColor * _Nonnull)containerColor OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) UIColor * _Nonnull whiteboardBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull containerColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
